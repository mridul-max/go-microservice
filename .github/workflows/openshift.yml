name: Deploy Go Microservice to OpenShift

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Secrets for OpenShift access
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "kilo-dev" # Change to your namespace
  APP_NAME: "go-drinkapp" # Change to your app name
  APP_PORT: "8082" # Port your app listens to
  IMAGE_REGISTRY: "docker.io/mridul017" # Docker Hub username or other registry
  IMAGE_REGISTRY_USER: "mridul017" # Docker Hub username
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

  # Default tag using git commit hash for better versioning
  IMAGE_TAGS: ${{ github.sha }}

jobs:
  build-and-deploy:
    name: Build and Deploy to OpenShift
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Install OpenShift CLI
      - name: Install OpenShift CLI
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4.6.0

      # Step 4: Build Docker Image
      - name: Build Docker Image
        id: build-image
        run: |
          docker build \
            -t ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }} \
            -f ./Dockerfile \
            .

      # Step 5: Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        id: push-image
        run: |
          echo "${{ secrets.IMAGE_REGISTRY_PASSWORD }}" | docker login ${{ env.IMAGE_REGISTRY }} -u ${{ env.IMAGE_REGISTRY_USER }} --password-stdin
          docker push ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }}

      # Step 6: Log in to OpenShift
      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      # Step 7: Deploy Application on OpenShift
      - name: Deploy and Expose OpenShift App
        id: deploy-and-expose
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ env.APP_NAME }}
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }}
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}

      # Step 8: Inject Environment Variables
      - name: Inject Environment Variables
        run: |
          oc set env deployment/${{ env.APP_NAME }} \
            DBURI=${{ secrets.DBURI }} \
            DBKEY=${{ secrets.DBKEY }} \
            DBNAME=${{ secrets.DBNAME }}

      # Step 9: Wait for Deployment Rollout
      - name: Wait for Deployment Rollout
        run: |
          oc rollout status deployment/${{ env.APP_NAME }} --watch

      # Step 10: Print Application URL
      - name: Print Application URL
        run: |
          ROUTE=$(oc get route ${{ env.APP_NAME }} -o jsonpath='{.spec.host}')
          echo "Your app is available at: http://$ROUTE"
